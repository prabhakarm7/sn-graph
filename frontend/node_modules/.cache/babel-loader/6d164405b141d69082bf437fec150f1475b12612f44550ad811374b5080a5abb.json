{"ast":null,"code":"// FilterTypes.ts - UPDATED with Complete Recommendations Mode Support\n\n// âœ… UPDATED: Enhanced interface with new PCA/ACA fields and incumbent products\n\n// âœ… UPDATED: Transform function with enhanced PCA/ACA logic and incumbent products\nexport function transformHierarchicalOptions(hierarchicalOptions) {\n  var _options$client_advis, _options$consultant_a, _options$incumbent_pr, _options$pcas, _options$acas;\n  // âœ… Handle both typed and untyped inputs\n  const options = hierarchicalOptions;\n  const extractNames = arr => {\n    if (!arr || arr.length === 0) return [];\n    return arr.map(item => typeof item === 'string' ? item : item.name || item.id);\n  };\n  console.log('ðŸ”„ Transforming hierarchical options with enhanced PCA/ACA logic and incumbent products:', {\n    clientAdvisors: ((_options$client_advis = options.client_advisors) === null || _options$client_advis === void 0 ? void 0 : _options$client_advis.length) || 0,\n    consultantAdvisors: ((_options$consultant_a = options.consultant_advisors) === null || _options$consultant_a === void 0 ? void 0 : _options$consultant_a.length) || 0,\n    incumbentProducts: ((_options$incumbent_pr = options.incumbent_products) === null || _options$incumbent_pr === void 0 ? void 0 : _options$incumbent_pr.length) || 0,\n    // NEW\n    legacyPcas: ((_options$pcas = options.pcas) === null || _options$pcas === void 0 ? void 0 : _options$pcas.length) || 0,\n    legacyAcas: ((_options$acas = options.acas) === null || _options$acas === void 0 ? void 0 : _options$acas.length) || 0,\n    rawClientAdvisors: options.client_advisors,\n    rawConsultantAdvisors: options.consultant_advisors,\n    rawIncumbentProducts: options.incumbent_products // NEW\n  });\n  const transformed = {\n    regions: ['NAI', 'EMEA', 'APAC'],\n    sales_regions: options.markets || [],\n    channels: options.channels || [],\n    assetClasses: options.asset_classes || [],\n    consultants: extractNames(options.consultants),\n    fieldConsultants: extractNames(options.field_consultants),\n    clients: extractNames(options.companies),\n    products: extractNames(options.products),\n    incumbent_products: extractNames(options.incumbent_products),\n    // NEW\n\n    // Legacy PCA/ACA (for backward compatibility)\n    pcas: options.pcas || [],\n    acas: options.acas || [],\n    // âœ… NEW: Enhanced PCA/ACA options\n    clientAdvisors: options.client_advisors || [],\n    // Company PCA + ACA combined\n    consultantAdvisors: options.consultant_advisors || [],\n    // Consultant PCA + Advisor combined\n\n    ratings: options.consultant_rankings || ['Positive', 'Negative', 'Neutral', 'Introduced'],\n    influenceLevels: options.influence_levels || ['1', '2', '3', '4'],\n    mandateStatuses: options.mandate_statuses || ['Active', 'At Risk', 'Conversion in Progress'],\n    jpm_flags: options.jpm_flags || ['Y', 'N'],\n    privacy_levels: options.privacy_levels || ['Public', 'Private', 'Confidential']\n  };\n  console.log('âœ… Transformed filter options with incumbent products support:', {\n    clientAdvisors: transformed.clientAdvisors.length,\n    consultantAdvisors: transformed.consultantAdvisors.length,\n    incumbentProducts: transformed.incumbent_products.length,\n    // NEW\n    clientAdvisorsList: transformed.clientAdvisors.slice(0, 5),\n    consultantAdvisorsList: transformed.consultantAdvisors.slice(0, 5),\n    incumbentProductsList: transformed.incumbent_products.slice(0, 5) // NEW\n  });\n  return transformed;\n}","map":{"version":3,"names":["transformHierarchicalOptions","hierarchicalOptions","_options$client_advis","_options$consultant_a","_options$incumbent_pr","_options$pcas","_options$acas","options","extractNames","arr","length","map","item","name","id","console","log","clientAdvisors","client_advisors","consultantAdvisors","consultant_advisors","incumbentProducts","incumbent_products","legacyPcas","pcas","legacyAcas","acas","rawClientAdvisors","rawConsultantAdvisors","rawIncumbentProducts","transformed","regions","sales_regions","markets","channels","assetClasses","asset_classes","consultants","fieldConsultants","field_consultants","clients","companies","products","ratings","consultant_rankings","influenceLevels","influence_levels","mandateStatuses","mandate_statuses","jpm_flags","privacy_levels","clientAdvisorsList","slice","consultantAdvisorsList","incumbentProductsList"],"sources":["/Users/prabhakarmudliyar/text-to-cypher-mui/frontend/src/components/types/FitlerTypes.ts"],"sourcesContent":["// FilterTypes.ts - UPDATED with Complete Recommendations Mode Support\n\nexport interface FilterCriteria {\n  regions?: string[];\n  nodeTypes?: string[];\n  sales_regions?: string[];\n  channels?: string[];\n  ratings?: string[];\n  influenceLevels?: string[];\n  assetClasses?: string[];\n  consultantIds?: string[];\n  fieldConsultantIds?: string[];\n  clientIds?: string[];\n  productIds?: string[];\n  pcaIds?: string[];\n  acaIds?: string[];\n  // NEW: Enhanced PCA/ACA filters\n  clientAdvisorIds?: string[]; // Company PCA + ACA combined\n  consultantAdvisorIds?: string[]; // Consultant PCA + Advisor combined\n  legacyPcaIds?: string[]; // Legacy PCA filter\n  // NEW: Incumbent Products filter for recommendations mode\n  incumbentProductIds?: string[];\n  mandateStatuses?: string[];\n  showInactive?: boolean;\n}\n\n\nexport interface FilterOptions {\n  regions: string[];\n  sales_regions: string[];\n  channels: string[];\n  assetClasses: string[];\n  consultants: string[];\n  fieldConsultants: string[];\n  clients: string[];\n  products: string[];\n  incumbent_products: string[];\n  pcas: string[];\n  acas: string[];\n  // NEW: Enhanced PCA/ACA options\n  clientAdvisors: string[]; // Company PCA + ACA combined\n  consultantAdvisors: string[]; // Consultant PCA + Advisor combined\n  ratings: string[];\n  influenceLevels: string[];\n  mandateStatuses: string[];\n  jpm_flags: string[];\n  privacy_levels: string[];\n}\n\n// âœ… UPDATED: Enhanced interface with new PCA/ACA fields and incumbent products\nexport interface HierarchicalFilterOptions {\n  markets?: string[];\n  channels?: string[];\n  asset_classes?: string[];\n  consultants?: Array<{id: string, name: string}> | string[];\n  field_consultants?: Array<{id: string, name: string}> | string[];\n  companies?: Array<{id: string, name: string}> | string[];\n  products?: Array<{id: string, name: string}> | string[];\n  incumbent_products?: Array<{id: string, name: string}> | string[]; // NEW\n  pcas?: string[];\n  acas?: string[];\n  // NEW: Enhanced PCA/ACA fields from backend\n  client_advisors?: string[]; // Company PCA + ACA combined\n  consultant_advisors?: string[]; // Consultant PCA + Advisor combined\n  consultant_rankings?: string[];\n  influence_levels?: string[];\n  mandate_statuses?: string[];\n  jpm_flags?: string[];\n  privacy_levels?: string[];\n}\n\n// âœ… UPDATED: Transform function with enhanced PCA/ACA logic and incumbent products\nexport function transformHierarchicalOptions(hierarchicalOptions: HierarchicalFilterOptions | Record<string, any>): FilterOptions {\n  // âœ… Handle both typed and untyped inputs\n  const options = hierarchicalOptions as HierarchicalFilterOptions;\n  \n  const extractNames = (arr: Array<{id: string, name: string}> | string[] | undefined): string[] => {\n    if (!arr || arr.length === 0) return [];\n    return arr.map(item => typeof item === 'string' ? item : item.name || item.id);\n  };\n\n  console.log('ðŸ”„ Transforming hierarchical options with enhanced PCA/ACA logic and incumbent products:', {\n    clientAdvisors: options.client_advisors?.length || 0,\n    consultantAdvisors: options.consultant_advisors?.length || 0,\n    incumbentProducts: options.incumbent_products?.length || 0, // NEW\n    legacyPcas: options.pcas?.length || 0,\n    legacyAcas: options.acas?.length || 0,\n    rawClientAdvisors: options.client_advisors,\n    rawConsultantAdvisors: options.consultant_advisors,\n    rawIncumbentProducts: options.incumbent_products // NEW\n  });\n\n  const transformed = {\n    regions: ['NAI', 'EMEA', 'APAC'],\n    sales_regions: options.markets || [],\n    channels: options.channels || [],\n    assetClasses: options.asset_classes || [],\n    consultants: extractNames(options.consultants),\n    fieldConsultants: extractNames(options.field_consultants),\n    clients: extractNames(options.companies),\n    products: extractNames(options.products),\n    incumbent_products: extractNames(options.incumbent_products), // NEW\n    \n    // Legacy PCA/ACA (for backward compatibility)\n    pcas: options.pcas || [],\n    acas: options.acas || [],\n    \n    // âœ… NEW: Enhanced PCA/ACA options\n    clientAdvisors: options.client_advisors || [], // Company PCA + ACA combined\n    consultantAdvisors: options.consultant_advisors || [], // Consultant PCA + Advisor combined\n    \n    ratings: options.consultant_rankings || ['Positive', 'Negative', 'Neutral', 'Introduced'],\n    influenceLevels: options.influence_levels || ['1', '2', '3', '4'],\n    mandateStatuses: options.mandate_statuses || ['Active', 'At Risk', 'Conversion in Progress'],\n    jpm_flags: options.jpm_flags || ['Y', 'N'],\n    privacy_levels: options.privacy_levels || ['Public', 'Private', 'Confidential']\n  };\n\n  console.log('âœ… Transformed filter options with incumbent products support:', {\n    clientAdvisors: transformed.clientAdvisors.length,\n    consultantAdvisors: transformed.consultantAdvisors.length,\n    incumbentProducts: transformed.incumbent_products.length, // NEW\n    clientAdvisorsList: transformed.clientAdvisors.slice(0, 5),\n    consultantAdvisorsList: transformed.consultantAdvisors.slice(0, 5),\n    incumbentProductsList: transformed.incumbent_products.slice(0, 5) // NEW\n  });\n\n  return transformed;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}