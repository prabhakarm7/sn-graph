{"ast":null,"code":"// config/ConsultantColors.ts\n// Carefully curated consultant colors that avoid status color conflicts\n// 🚫 AVOIDED COLORS (to prevent confusion with status indicators):\n// - Red shades (used for \"Negative\" ratings, \"At Risk\" status)\n// - Orange shades (used for \"Conversion in Progress\", warnings)\n// - Green shades (used for \"Positive\" ratings, \"Active\" status)\n// - Yellow shades (used for influence levels, warnings)\n// ✅ SAFE CONSULTANT COLORS - No conflict with status indicators\nexport const CONSULTANT_COLOR_PALETTE=[{name:'Deep Purple',primary:'#7c3aed',secondary:'#6d28d9',light:'rgba(124, 58, 237, 0.12)',description:'Rich, sophisticated purple'},{name:'Violet',primary:'#9333ea',secondary:'#7c3aed',light:'rgba(147, 51, 234, 0.12)',description:'Modern, distinctive violet'},{name:'Teal',primary:'#0d9488',secondary:'#0f766e',light:'rgba(13, 148, 136, 0.12)',description:'Calm, balanced teal'},{name:'Cyan',primary:'#0891b2',secondary:'#0e7490',light:'rgba(8, 145, 178, 0.12)',description:'Cool, professional cyan'},{name:'Sky Blue',primary:'#0284c7',secondary:'#0369a1',light:'rgba(2, 132, 199, 0.12)',description:'Bright, clear sky blue'},{name:'Rose Pink',primary:'#be185d',secondary:'#a21caf',light:'rgba(190, 24, 93, 0.12)',description:'Elegant, distinctive pink'},{name:'Plum',primary:'#a855f7',secondary:'#9333ea',light:'rgba(168, 85, 247, 0.12)',description:'Rich, royal plum'},{name:'Sapphire',primary:'#1d4ed8',secondary:'#2563eb',light:'rgba(29, 78, 216, 0.12)',description:'Brilliant sapphire blue'},{name:'Magenta',primary:'#c026d3',secondary:'#a21caf',light:'rgba(192, 38, 211, 0.12)',description:'Bold, creative magenta'}];// 🎨 APP THEME COLORS (for UI elements only)\nexport const APP_THEME_COLORS={primary:'#6366f1',// App's main indigo color\nsecondary:'#4f46e5',// App's secondary indigo\nsuccess:'#10b981',// App's success green\nwarning:'#f59e0b',// App's warning orange\nerror:'#ef4444',// App's error red\ninfo:'#3b82f6',// App's info blue\nsurface:'rgba(15, 23, 42, 0.95)',surfaceLight:'rgba(255, 255, 255, 0.1)'};// 🏢 FIXED ENTITY COLORS (separate from consultants)\nexport const ENTITY_COLORS={company:{name:'Corporate Green',primary:'#059669',// Emerald green for companies\nsecondary:'#047857',light:'rgba(5, 150, 105, 0.12)',description:'Professional corporate green'},product:{name:'Product Blue',primary:'#0ea5e9',// Sky blue for products  \nsecondary:'#0284c7',light:'rgba(14, 165, 233, 0.12)',description:'Clear product identification blue'}};// 🚦 STATUS COLORS (used for ratings, mandate status, etc.)\nexport const STATUS_COLORS={positive:'#16a34a',// Green for positive ratings\nnegative:'#dc2626',// Red for negative ratings\nneutral:'#6b7280',// Gray for neutral/introduced\nwarning:'#f59e0b',// Orange for warnings/at risk\nactive:'#10b981',// Bright green for active status\natRisk:'#ef4444',// Red for at risk status\ninProgress:'#f59e0b',// Orange for conversion in progress\nhigh:'#16a34a',// Green for high influence\nmedium:'#f59e0b',// Orange for medium influence  \nlow:'#ef4444',// Red for low influence\nunknown:'#6b7280'// Gray for unknown\n};// 🔧 UTILITY FUNCTIONS\nexport const getConsultantColorByIndex=index=>{return CONSULTANT_COLOR_PALETTE[index%CONSULTANT_COLOR_PALETTE.length];};export const getConsultantColorById=consultantId=>{if(!consultantId)return CONSULTANT_COLOR_PALETTE[0];// Create a simple hash from the consultant ID\nlet hash=0;for(let i=0;i<consultantId.length;i++){const char=consultantId.charCodeAt(i);hash=(hash<<5)-hash+char;hash=hash&hash;// Convert to 32-bit integer\n}const index=Math.abs(hash)%CONSULTANT_COLOR_PALETTE.length;return CONSULTANT_COLOR_PALETTE[index];};// 📊 COLOR PALETTE INFO\nexport const getColorPaletteInfo=()=>{return{totalConsultantColors:CONSULTANT_COLOR_PALETTE.length,consultantColors:CONSULTANT_COLOR_PALETTE.map(color=>({name:color.name,primary:color.primary,description:color.description})),entityColors:{company:ENTITY_COLORS.company,product:ENTITY_COLORS.product},statusColors:STATUS_COLORS,appTheme:APP_THEME_COLORS};};// 🎨 EXPORT INDIVIDUAL COLOR ARRAYS FOR EASY ACCESS\nexport const CONSULTANT_COLORS=CONSULTANT_COLOR_PALETTE.map(color=>({primary:color.primary,secondary:color.secondary,light:color.light}));// Debug function to log all colors (for development)\nexport const logColorPalette=()=>{console.log('🎨 CONSULTANT COLOR PALETTE:');CONSULTANT_COLOR_PALETTE.forEach((color,index)=>{console.log(`${index+1}. ${color.name} (${color.primary}) - ${color.description}`);});console.log('\\n🏢 ENTITY COLORS:');console.log(`Company: ${ENTITY_COLORS.company.name} (${ENTITY_COLORS.company.primary})`);console.log(`Product: ${ENTITY_COLORS.product.name} (${ENTITY_COLORS.product.primary})`);console.log('\\n🚦 STATUS COLORS:');console.log('Positive:',STATUS_COLORS.positive);console.log('Negative:',STATUS_COLORS.negative);console.log('Warning:',STATUS_COLORS.warning);console.log('Active:',STATUS_COLORS.active);console.log('At Risk:',STATUS_COLORS.atRisk);};","map":{"version":3,"names":["CONSULTANT_COLOR_PALETTE","name","primary","secondary","light","description","APP_THEME_COLORS","success","warning","error","info","surface","surfaceLight","ENTITY_COLORS","company","product","STATUS_COLORS","positive","negative","neutral","active","atRisk","inProgress","high","medium","low","unknown","getConsultantColorByIndex","index","length","getConsultantColorById","consultantId","hash","i","char","charCodeAt","Math","abs","getColorPaletteInfo","totalConsultantColors","consultantColors","map","color","entityColors","statusColors","appTheme","CONSULTANT_COLORS","logColorPalette","console","log","forEach"],"sources":["/Users/prabhakarmudliyar/text-to-cypher-mui/frontend/src/components/config/ConsultantColors.ts"],"sourcesContent":["// config/ConsultantColors.ts\n// Carefully curated consultant colors that avoid status color conflicts\n\n// 🚫 AVOIDED COLORS (to prevent confusion with status indicators):\n// - Red shades (used for \"Negative\" ratings, \"At Risk\" status)\n// - Orange shades (used for \"Conversion in Progress\", warnings)\n// - Green shades (used for \"Positive\" ratings, \"Active\" status)\n// - Yellow shades (used for influence levels, warnings)\n\n// ✅ SAFE CONSULTANT COLORS - No conflict with status indicators\nexport const CONSULTANT_COLOR_PALETTE = [\n  {\n    name: 'Deep Purple',\n    primary: '#7c3aed',\n    secondary: '#6d28d9',\n    light: 'rgba(124, 58, 237, 0.12)',\n    description: 'Rich, sophisticated purple'\n  },\n  {\n    name: 'Violet',\n    primary: '#9333ea',\n    secondary: '#7c3aed',\n    light: 'rgba(147, 51, 234, 0.12)',\n    description: 'Modern, distinctive violet'\n  },\n  {\n    name: 'Teal',\n    primary: '#0d9488',\n    secondary: '#0f766e',\n    light: 'rgba(13, 148, 136, 0.12)',\n    description: 'Calm, balanced teal'\n  },\n  {\n    name: 'Cyan',\n    primary: '#0891b2',\n    secondary: '#0e7490',\n    light: 'rgba(8, 145, 178, 0.12)',\n    description: 'Cool, professional cyan'\n  },\n  {\n    name: 'Sky Blue',\n    primary: '#0284c7',\n    secondary: '#0369a1',\n    light: 'rgba(2, 132, 199, 0.12)',\n    description: 'Bright, clear sky blue'\n  },\n  {\n    name: 'Rose Pink',\n    primary: '#be185d',\n    secondary: '#a21caf',\n    light: 'rgba(190, 24, 93, 0.12)',\n    description: 'Elegant, distinctive pink'\n  },\n  {\n    name: 'Plum',\n    primary: '#a855f7',\n    secondary: '#9333ea',\n    light: 'rgba(168, 85, 247, 0.12)',\n    description: 'Rich, royal plum'\n  },\n  {\n    name: 'Sapphire',\n    primary: '#1d4ed8',\n    secondary: '#2563eb',\n    light: 'rgba(29, 78, 216, 0.12)',\n    description: 'Brilliant sapphire blue'\n  },\n  {\n    name: 'Magenta',\n    primary: '#c026d3',\n    secondary: '#a21caf',\n    light: 'rgba(192, 38, 211, 0.12)',\n    description: 'Bold, creative magenta'\n  }\n];\n\n// 🎨 APP THEME COLORS (for UI elements only)\nexport const APP_THEME_COLORS = {\n  primary: '#6366f1',      // App's main indigo color\n  secondary: '#4f46e5',    // App's secondary indigo\n  success: '#10b981',      // App's success green\n  warning: '#f59e0b',      // App's warning orange\n  error: '#ef4444',        // App's error red\n  info: '#3b82f6',         // App's info blue\n  surface: 'rgba(15, 23, 42, 0.95)',\n  surfaceLight: 'rgba(255, 255, 255, 0.1)'\n};\n\n// 🏢 FIXED ENTITY COLORS (separate from consultants)\nexport const ENTITY_COLORS = {\n  company: {\n    name: 'Corporate Green',\n    primary: '#059669',      // Emerald green for companies\n    secondary: '#047857',\n    light: 'rgba(5, 150, 105, 0.12)',\n    description: 'Professional corporate green'\n  },\n  product: {\n    name: 'Product Blue',\n    primary: '#0ea5e9',      // Sky blue for products  \n    secondary: '#0284c7',\n    light: 'rgba(14, 165, 233, 0.12)',\n    description: 'Clear product identification blue'\n  }\n};\n\n// 🚦 STATUS COLORS (used for ratings, mandate status, etc.)\nexport const STATUS_COLORS = {\n  positive: '#16a34a',      // Green for positive ratings\n  negative: '#dc2626',      // Red for negative ratings\n  neutral: '#6b7280',       // Gray for neutral/introduced\n  warning: '#f59e0b',       // Orange for warnings/at risk\n  active: '#10b981',        // Bright green for active status\n  atRisk: '#ef4444',        // Red for at risk status\n  inProgress: '#f59e0b',    // Orange for conversion in progress\n  high: '#16a34a',          // Green for high influence\n  medium: '#f59e0b',        // Orange for medium influence  \n  low: '#ef4444',           // Red for low influence\n  unknown: '#6b7280'        // Gray for unknown\n};\n\n// 🔧 UTILITY FUNCTIONS\nexport const getConsultantColorByIndex = (index: number) => {\n  return CONSULTANT_COLOR_PALETTE[index % CONSULTANT_COLOR_PALETTE.length];\n};\n\nexport const getConsultantColorById = (consultantId: string) => {\n  if (!consultantId) return CONSULTANT_COLOR_PALETTE[0];\n  \n  // Create a simple hash from the consultant ID\n  let hash = 0;\n  for (let i = 0; i < consultantId.length; i++) {\n    const char = consultantId.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash; // Convert to 32-bit integer\n  }\n  \n  const index = Math.abs(hash) % CONSULTANT_COLOR_PALETTE.length;\n  return CONSULTANT_COLOR_PALETTE[index];\n};\n\n// 📊 COLOR PALETTE INFO\nexport const getColorPaletteInfo = () => {\n  return {\n    totalConsultantColors: CONSULTANT_COLOR_PALETTE.length,\n    consultantColors: CONSULTANT_COLOR_PALETTE.map(color => ({\n      name: color.name,\n      primary: color.primary,\n      description: color.description\n    })),\n    entityColors: {\n      company: ENTITY_COLORS.company,\n      product: ENTITY_COLORS.product\n    },\n    statusColors: STATUS_COLORS,\n    appTheme: APP_THEME_COLORS\n  };\n};\n\n// 🎨 EXPORT INDIVIDUAL COLOR ARRAYS FOR EASY ACCESS\nexport const CONSULTANT_COLORS = CONSULTANT_COLOR_PALETTE.map(color => ({\n  primary: color.primary,\n  secondary: color.secondary,\n  light: color.light\n}));\n\n// Debug function to log all colors (for development)\nexport const logColorPalette = () => {\n  console.log('🎨 CONSULTANT COLOR PALETTE:');\n  CONSULTANT_COLOR_PALETTE.forEach((color, index) => {\n    console.log(`${index + 1}. ${color.name} (${color.primary}) - ${color.description}`);\n  });\n  \n  console.log('\\n🏢 ENTITY COLORS:');\n  console.log(`Company: ${ENTITY_COLORS.company.name} (${ENTITY_COLORS.company.primary})`);\n  console.log(`Product: ${ENTITY_COLORS.product.name} (${ENTITY_COLORS.product.primary})`);\n  \n  console.log('\\n🚦 STATUS COLORS:');\n  console.log('Positive:', STATUS_COLORS.positive);\n  console.log('Negative:', STATUS_COLORS.negative);\n  console.log('Warning:', STATUS_COLORS.warning);\n  console.log('Active:', STATUS_COLORS.active);\n  console.log('At Risk:', STATUS_COLORS.atRisk);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}