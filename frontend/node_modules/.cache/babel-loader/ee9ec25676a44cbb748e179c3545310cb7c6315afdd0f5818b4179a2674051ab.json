{"ast":null,"code":"var _jsxFileName = \"/Users/prabhakarmudliyar/text-to-cypher-mui/frontend/src/components/context/GraphDataProvider.tsx\",\n  _s = $RefreshSig$();\n// context/GraphDataProvider.tsx - Updated for Hierarchical Integration\nimport React, { createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphDataContext = /*#__PURE__*/createContext(null);\nexport const GraphDataProvider = ({\n  children,\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(GraphDataContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = GraphDataProvider;\nexport const useGraphDataContext = () => {\n  _s();\n  const context = useContext(GraphDataContext);\n  if (!context) {\n    throw new Error('useGraphDataContext must be used within a GraphDataProvider');\n  }\n  return context;\n};\n_s(useGraphDataContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"GraphDataProvider\");","map":{"version":3,"names":["React","createContext","useContext","jsxDEV","_jsxDEV","GraphDataContext","GraphDataProvider","children","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGraphDataContext","_s","context","Error","$RefreshReg$"],"sources":["/Users/prabhakarmudliyar/text-to-cypher-mui/frontend/src/components/context/GraphDataProvider.tsx"],"sourcesContent":["// context/GraphDataProvider.tsx - Updated for Hierarchical Integration\nimport React, { createContext, useContext, ReactNode } from 'react';\nimport type { FilterCriteria, FilterOptions } from '../types/FitlerTypes';\n\ninterface GraphDataContextType {\n  // Filter data and options\n  filterOptions: FilterOptions | null;\n  currentFilters: FilterCriteria;\n  currentRegions: string[];\n  \n  // Loading states\n  filterLoading: boolean;\n  error: string | null;\n  \n  // Actions\n  changeRegions: (regions: string[]) => Promise<void>;\n  applyFilters: (filters: Partial<FilterCriteria>) => Promise<void>;\n  resetFilters: () => void;\n  getAvailableRegions: () => string[];\n}\n\nconst GraphDataContext = createContext<GraphDataContextType | null>(null);\n\ninterface GraphDataProviderProps {\n  children: ReactNode;\n  value: GraphDataContextType;\n} \n\nexport const GraphDataProvider: React.FC<GraphDataProviderProps> = ({ children, value }) => {\n  return (\n    <GraphDataContext.Provider value={value}>\n      {children}\n    </GraphDataContext.Provider>\n  );\n};\n\nexport const useGraphDataContext = () => {\n  const context = useContext(GraphDataContext);\n  if (!context) {\n    throw new Error('useGraphDataContext must be used within a GraphDataProvider');\n  }\n  return context;\n};"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAoBpE,MAAMC,gBAAgB,gBAAGJ,aAAa,CAA8B,IAAI,CAAC;AAOzE,OAAO,MAAMK,iBAAmD,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAM,CAAC,KAAK;EAC1F,oBACEJ,OAAA,CAACC,gBAAgB,CAACI,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAD,QAAA,EACrCA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAACC,EAAA,GANWR,iBAAmD;AAQhE,OAAO,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAMC,OAAO,GAAGf,UAAU,CAACG,gBAAgB,CAAC;EAC5C,IAAI,CAACY,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6DAA6D,CAAC;EAChF;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,mBAAmB;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}